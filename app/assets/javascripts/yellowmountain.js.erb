$(document).ready(function(){
  var scene = new THREE.Scene();
  //var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );
  var camera = new THREE.PerspectiveCamera( 75, document.getElementById("mountain").offsetWidth / document.getElementById("mountain").offsetHeight, 0.1, 1000 );

  var renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
  //renderer.setSize( window.innerWidth, window.innerHeight );
  renderer.setSize( document.getElementById("mountain").offsetWidth, document.getElementById("mountain").offsetHeight );
  document.getElementById("mountain").appendChild( renderer.domElement );

  loader = new THREE.JSONLoader();
  //var geometry = new THREE.BoxGeometry( 1, 1, 1 );
  var material = new THREE.MeshLambertMaterial( { color: 0xffdc00, shading: THREE.FlatShading } );
  //var material2 = new THREE.MeshBasicMaterial( { color: 0xffdc00, shading: THREE.FlatShading, wireframe: true } ); ///// WIREFRAME

  var mouseX = 0, mouseY = 0; // Moves according to mouse position.
  var windowHalfX = window.innerWidth / 2; // Moves according to mouse position.
  var windowHalfY = window.innerHeight / 2; // Moves according to mouse position.
  document.addEventListener( 'mousemove', onDocumentMouseMove, false ); // Moves according to mouse position.

  loader.load("<%= asset_path('yellowmountain.json') %>", function ( geometry ) {
    mountain = new THREE.Mesh(geometry, material);
    //mountainwf = new THREE.Mesh(geometry, material2); ///// WIREFRAME
    mountain.rotation.y = -0.754;
    //mountainwf.rotation.y = -0.754; ///// WIREFRAME
    //mountainwf.scale.set(4,4,4) ///// WIREFRAME
    //mountain.rotation.y = -1.3;
    scene.add( mountain );
    //scene.add( mountainwf ); ///// WIREFRAME
  });

  //var cube = new THREE.Mesh( geometry, material );
  //scene.add( cube );

  var ambient = new THREE.AmbientLight( 0x404040 );
  scene.add( ambient );

  var point = new THREE.PointLight( 0xffffff, 1, 75 );
  point.position.set( 16, 16, 16 );
  scene.add( point );


  camera.position.z = 3.2;
  camera.position.y = 0.4;

  function onDocumentMouseMove( event ) {

    mouseX = ( event.clientX - windowHalfX ); // Moves according to mouse position.
    mouseY = ( event.clientY - windowHalfY ); // Moves according to mouse position.

  }

  function render() {
    requestAnimationFrame( render );
    //cube.rotation.x += 0.1;
    //mountain.rotation.y -= 0.002; // Preferred automatic rotation
    mountain.rotation.y = ( - mouseX - mountain.rotation.y ) * 0.0012 -1.3; // Moves according to mouse position.
    mountain.rotation.x = ( - mouseY - mountain.rotation.x ) * 0.0003; // Moves according to mouse position.
    //mountainwf.rotation.y = ( - mouseX - mountainwf.rotation.y ) * 0.0012 -1.3; // Moves according to mouse position. ///// WIREFRAME
    //mountainwf.rotation.x = ( - mouseY - mountainwf.rotation.x ) * 0.0003; // Moves according to mouse position. ///// WIREFRAME
    //mountain.rotation.y -= 0.01;
    renderer.render( scene, camera );
  }
  render();
})
